.section init
.temps r6, r7

.section valuestack
.space 1000000
endvaluestack:

r3 := endvaluestack

.section callstack
.space 1000000
endcallstack:

r2 := endcallstack

.section rodata

	r0 := 0

	r1 := 24	// r1 = 7	
	push r1 on stack r3 
	push r1 on stack r2
//	r4 := m[r0][r3]
//	output "first value is: "
//	output r4
//	push r4 on stack r3 	//frees up r4 to use
//	output "\n"

	r1 := 42 	// r1 =  8
	push r1 on stack r3
//	r4 := m[r0][r3]
//	output "second value is: "
//	output r4
//	output "\n"


	r1 := 1229	// r1 = 9
	push r1 on stack r3
//	r4 := m[r0][r3]
//	output "third value is: "
//	output r4
//	output "\n"

//	output "checking the stack using accesses"	
//	r4 := m[r0][r3+2]
//	output r4
	goto call_iter


.section text

call_iter:
	r5 := r3
	push r5 on stack r2 	//frees up r5 as non volatile register
	if (r3 == endvaluestack) goto finish using r4
	r5 := m[r0][r3]	  	// first value will be last val on stack
	goto print linking r1
	
	r3 := r3 + 1
	goto call_iter
		
	
finish:
	pop r5 off stack r2
	r3 := r5
	halt

